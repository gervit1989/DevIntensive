package com.softdesign.devintensive.data.storage.models;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.softdesign.devintensive.data.storage.models.Repository;
import com.softdesign.devintensive.data.storage.models.User;
import com.softdesign.devintensive.data.storage.models.MUser;

import com.softdesign.devintensive.data.storage.models.RepositoryDao;
import com.softdesign.devintensive.data.storage.models.UserDao;
import com.softdesign.devintensive.data.storage.models.MUserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig repositoryDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig mUserDaoConfig;

    private final RepositoryDao repositoryDao;
    private final UserDao userDao;
    private final MUserDao mUserDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        repositoryDaoConfig = daoConfigMap.get(RepositoryDao.class).clone();
        repositoryDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        mUserDaoConfig = daoConfigMap.get(MUserDao.class).clone();
        mUserDaoConfig.initIdentityScope(type);

        repositoryDao = new RepositoryDao(repositoryDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        mUserDao = new MUserDao(mUserDaoConfig, this);

        registerDao(Repository.class, repositoryDao);
        registerDao(User.class, userDao);
        registerDao(MUser.class, mUserDao);
    }
    
    public void clear() {
        repositoryDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        mUserDaoConfig.getIdentityScope().clear();
    }

    public RepositoryDao getRepositoryDao() {
        return repositoryDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public MUserDao getMUserDao() {
        return mUserDao;
    }

}
